using UnityEngine;
using System.Collections;
using System.Collections.Generic;

public class MousePlayerActionController : MonoBehaviour {
	//public GameObject playerGO;
	private Vector3 mousePosition;
	private Player player;
	
	private enum hitTypes{
		walkableFloor = 0,
		sceneryObject,
		inventoryItem,
		noType
	}
	
	//public delegate void GoTo(Vector2 direction);
	//public static event GoTo playerGoTo;
	//public delegate void Speak(List<string> textCodes);
	//public static event Speak playerSpeak;
	
	void Start () {
		//player = playerGO.GetComponent<Player>();
		player = this.gameObject.GetComponent<Player>();
	}
	
	//private int currentSelectedHit = 0;
	//private hitTypes currentHitType = hitTypes.noType;
	
	void Update () {
		
		if(Input.GetMouseButtonDown(0)){
			if(!player.isDoingAnAction && !player.isSpeaking){
				mousePosition = Camera.main.ScreenToWorldPoint(Input.mousePosition);
				RaycastHit2D[] hits = Physics2D.RaycastAll(new Vector2(mousePosition.x, mousePosition.y), Vector2.zero, 0f);
				
				int currentSelectedHit = 0;
				hitTypes currentHitType = hitTypes.noType;
				
				for(int hitIterator = 0; hitIterator < hits.Length; hitIterator++){
					if(hits[hitIterator].collider != null){
						switch(hits[hitIterator].collider.transform.tag){
						case "ItemInventory":
							currentHitType = hitTypes.inventoryItem;
							currentSelectedHit = hitIterator;
							break;
							
						case "InteractivePoint":
							if(currentHitType == hitTypes.noType || currentHitType == hitTypes.walkableFloor){
								currentHitType = hitTypes.sceneryObject;
								currentSelectedHit = hitIterator;
							}
							break;
							
						case "NavigationPolygon": case "NavigationLinks":
							if(currentHitType == hitTypes.noType){
								currentHitType = hitTypes.walkableFloor;
								currentSelectedHit = hitIterator;
							}
							break;
						}
					}
				}
				
				if(player.isGoingToDirection){
					//player.isGoingToDirectionChanged = true;
				}
				
				switch(currentHitType){
				case hitTypes.inventoryItem:
					player.DescribeItemInventory(hits[currentSelectedHit].collider.gameObject.GetComponent<ItemInventory>());
					break;
				case hitTypes.sceneryObject:
					player.Describe(hits[currentSelectedHit].collider.gameObject.GetComponent<InteractiveObject>());
					break;
				case hitTypes.walkableFloor:
					player.GoTo(mousePosition);
					break;
				default:
					break;
				}
				
				//currentHitType = hitTypes.noType;
				//currentSelectedHit = 0;
			}
		}
		else if(Input.GetMouseButtonDown(1)){
			mousePosition = Camera.main.ScreenToWorldPoint(Input.mousePosition);
			RaycastHit2D[] hits = Physics2D.RaycastAll(new Vector2(mousePosition.x, mousePosition.y), Vector2.zero, 0f);
			
			int currentSelectedHit = 0;
			hitTypes currentHitType = hitTypes.noType;
			
			for(int hitIterator = 0; hitIterator < hits.Length; hitIterator++){
				if(hits[hitIterator].collider != null){
					switch(hits[hitIterator].collider.transform.tag){
					case "ItemInventory":
						currentHitType = hitTypes.inventoryItem;
						currentSelectedHit = hitIterator;
						break;
						
					case "InteractivePoint":
						if(currentHitType == hitTypes.noType || currentHitType == hitTypes.walkableFloor){
							currentHitType = hitTypes.sceneryObject;
							currentSelectedHit = hitIterator;
						}
						break;
						
					case "NavigationPolygon":
						if(currentHitType == hitTypes.noType){
							currentHitType = hitTypes.walkableFloor;
							currentSelectedHit = hitIterator;
						}
						break;
					}
				}
			}
			
			if(player.isGoingToDirection){
				Debug.Log("MouseTargetingController: isGoingToDirectionChanged is true");
				//player.isGoingToDirectionChanged = true;
			}
			
			switch(currentHitType){
			case hitTypes.inventoryItem:
				player.isUsingItemInventory = true;
				break;
			case hitTypes.sceneryObject:
				if(!player.isUsingItemInventory){
					player.Action(hits[currentSelectedHit].collider.gameObject.GetComponent<InteractiveObject>());
				}
				else{
					player.isUsingItemInventory = false;
				}
				break;
			case hitTypes.walkableFloor:
				List<string> textToDisplayIfNothingIsInteresting = new List<string>();
				/*
				textToDisplayIfNothingIsInteresting.Add("Ahi no hay");
				textToDisplayIfNothingIsInteresting.Add("nada que me");
				textToDisplayIfNothingIsInteresting.Add("interese");
				*/
				textToDisplayIfNothingIsInteresting.Add("GUI");
				textToDisplayIfNothingIsInteresting.Add("NOTHING_OF_INTEREST");
				textToDisplayIfNothingIsInteresting.Add("DEFAULT");
				player.Speak(textToDisplayIfNothingIsInteresting);
				break;
			default:
				break;
			}
			
			//currentHitType = hitTypes.noType;
			//currentSelectedHit = 0;
		}
	}
	
	/*
	// Update is called once per frame
	void Update () {
		if(!player.isDoingAnAction && !player.isSpeaking){
			if(Input.GetMouseButtonDown(0)){
				mousePosition = Camera.main.ScreenToWorldPoint(Input.mousePosition);
				RaycastHit2D[] hits = Physics2D.RaycastAll(new Vector2(mousePosition.x,mousePosition.y), Vector2.zero, 0f);
				if(hit.collider != null){
					if(hit.collider.transform.tag == "ItemInventory"){
						Debug.Log("MouseTargetingController:ItemInventory");
						player.DescribeItemInventory(hit.collider.gameObject.GetComponent<ItemInventory>());
					}
					else if(hit.collider.transform.tag == "InteractivePoint"){
						player.Describe(hit.collider.gameObject.GetComponent<InteractiveObject>());
                    }
					else if(hit.collider.transform.tag == "NavigationPolygon"){
						player.GoTo(mousePosition);
                    }
				}
			}
			else if(Input.GetMouseButtonDown(1)){
				mousePosition = Camera.main.ScreenToWorldPoint(Input.mousePosition);
				RaycastHit2D hit = Physics2D.Raycast(new Vector2(mousePosition.x,mousePosition.y), Vector2.zero, 0f);
				if(hit.collider != null){
					if(hit.collider.transform.tag == "InteractivePoint"){
						Debug.Log("MouseTargetingController: Right click: Interactive Point");
						if(!player.isUsingItemInventory){
							Debug.Log("MouseTargetingController: Right click: Interactive Point: Object Interaction");
							player.Interact(hit.collider.gameObject.GetComponent<InteractiveObject>());
						}
						else{
							player.isUsingItemInventory = false;
						}
					}
                    else if(hit.collider.transform.tag == "ItemInventory"){
                        player.isUsingItemInventory = true;
					}
					else if(hit.collider.transform.tag == "NavigationPolygon"){
						List<string> textToDisplayIfNothingIsInteresting = new List<string>();
						textToDisplayIfNothingIsInteresting.Add("Ahi no hay");
						textToDisplayIfNothingIsInteresting.Add("nada que me");
						textToDisplayIfNothingIsInteresting.Add("interese");
						player.Speak(textToDisplayIfNothingIsInteresting);
					}
                }
            }
        }
        
    }
    */
	
}

