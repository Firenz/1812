using UnityEngine;
using System.Collections;

public class PlayerStateHandler : MonoBehaviour {
	private Animator playerAnimator = null;
	public PlayerStateController.playerStates previousState = PlayerStateController.playerStates.leftIdle;
	public PlayerStateController.playerStates currentState = PlayerStateController.playerStates.leftIdle;
	
	void OnEnable(){
		PlayerStateController.onStateChange += onStateChange;
	}
	
	void OnDisable(){
		PlayerStateController.onStateChange -= onStateChange;
	}
	
	// Use this for initialization
	void Start () {
		playerAnimator = GetComponent<Animator>();
	}

	/*
	// Update is called once per frame
	void LateUpdate() {
		OnStateCycle();
	}


	void OnStateCycle(){
		
		switch(currentState){
		case PlayerStateController.playerStates.leftIdle:
			break;

		case PlayerStateController.playerStates.rightIdle:
			break;

		case PlayerStateController.playerStates.leftWalking:
			break;
			
		case PlayerStateController.playerStates.rightWalking:
			break;
		}
	}
	*/


	public void onStateChange(PlayerStateController.playerStates newState){
		if(newState == currentState){
			return;
		}
		
		switch(newState){
		case PlayerStateController.playerStates.leftIdle:
			playerAnimator.SetBool("isLeftWalking", false);
			playerAnimator.SetBool("isRightWalking", false);
			playerAnimator.SetBool("isSpeaking",false);
			break;

		case PlayerStateController.playerStates.rightIdle:
			playerAnimator.SetBool("isLeftWalking", false);
			playerAnimator.SetBool("isRightWalking", false);
			playerAnimator.SetBool("isSpeaking",false);
			break;
			
		case PlayerStateController.playerStates.leftWalking:
			playerAnimator.SetBool("isLeftWalking", true);
			playerAnimator.SetBool("isRightWalking", false);
			playerAnimator.SetBool("isSpeaking",false);
			break;
			
		case PlayerStateController.playerStates.rightWalking:
			playerAnimator.SetBool("isLeftWalking", false);
			playerAnimator.SetBool("isRightWalking", true);
			playerAnimator.SetBool("isSpeaking",false);
			break;

		case PlayerStateController.playerStates.leftSpeaking:
			playerAnimator.SetBool("isLeftWalking", false);
			playerAnimator.SetBool("isRightWalking", false);
			playerAnimator.SetBool("isSpeaking",true);
			break;

		case PlayerStateController.playerStates.rightSpeaking:
			playerAnimator.SetBool("isLeftWalking", false);
			playerAnimator.SetBool("isRightWalking", false);
			playerAnimator.SetBool("isSpeaking",true);
			break;
		}
		
		previousState = currentState;
		currentState = newState;
	}
}
